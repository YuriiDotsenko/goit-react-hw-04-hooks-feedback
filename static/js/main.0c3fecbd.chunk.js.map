{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/FeedbackSection/FeedbackSection.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","percentage","className","FeedbackOptions","handleClickOnBtn","options","map","option","index","type","onClick","Section","title","children","defaultProps","Notification","message","defayltProps","FeedbackSection","countTotalFeedback","countPositiveFeedbackPercentage","App","useState","setGood","setNeutral","setBad","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAiCeA,EA9BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,WAA9B,OACjB,qBAAIC,UAAU,QAAd,UACE,6BACE,0CACQ,+BAAOL,SAGjB,6BACE,6CACW,+BAAOC,SAGpB,6BACE,yCACO,+BAAOC,SAGhB,6BACE,2CACS,+BAAOC,WAGlB,6BACE,uDACqB,yCAAUC,IAAV,gBCAZE,G,MAvBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBC,EAArB,EAAqBA,QAArB,OACtB,qBAAKH,UAAU,iBAAf,SACGG,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,wBAEEC,KAAK,SACLC,QAAS,kBAAMN,EAAiBG,IAHlC,SAKGA,GAJIC,UCJPG,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASX,UAAU,UAAnB,UACE,oBAAIA,UAAU,QAAd,SAAuBU,IACtBC,OAILF,EAAQG,aAAe,CACrBF,MAAO,GACPC,SAAU,IAQGF,QClBTI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaE,aAAe,CAC1BD,QAAS,sCAOID,QCqCAG,EAzCS,SAAC,GAAD,IACtBd,EADsB,EACtBA,iBACAe,EAFsB,EAEtBA,mBACAC,EAHsB,EAGtBA,gCACAvB,EAJsB,EAItBA,KACAC,EALsB,EAKtBA,QACAC,EANsB,EAMtBA,IANsB,OAQtB,eAAC,EAAD,CAASa,MAAM,qCAAf,UACE,cAAC,EAAD,CACER,iBAAkBA,EAClBC,QAAS,CAAC,OAAQ,UAAW,SAE/B,oBAAIH,UAAU,mBAAd,wBAC0B,IAAzBiB,IACC,cAAC,EAAD,CAAcH,QAAQ,sBAEtB,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,EACPlB,WAAYmB,QCULC,EAtCH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgB0B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOvB,EAAP,KAAY0B,EAAZ,KAEMrB,EAAmB,CACvBP,KAAM,WACJ0B,GAAQ,SAAA1B,GAAI,OAAIA,EAAO,MAGzBC,QAAS,WACP0B,GAAW,SAAA1B,GAAO,OAAIA,EAAU,MAGlCC,IAAK,WACH0B,GAAO,SAAA1B,GAAG,OAAIA,EAAM,OAIlBoB,EAAqB,kBAAMtB,EAAOC,EAAUC,GAKlD,OACE,8BACE,cAAC,EAAD,CACEK,iBAAkBA,EAClBe,mBAAoBA,EACpBC,gCARkC,kBACpCvB,EAAOsB,IAAwB,KAAKO,QAAQ,IAQ1C7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,OC9Bb4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0c3fecbd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => (\r\n  <ul className=\"Stats\">\r\n    <li>\r\n      <span>\r\n        Good: <span>{good}</span>\r\n      </span>\r\n    </li>\r\n    <li>\r\n      <span>\r\n        Neutral: <span>{neutral}</span>\r\n      </span>\r\n    </li>\r\n    <li>\r\n      <span>\r\n        Bad: <span>{bad}</span>\r\n      </span>\r\n    </li>\r\n    <li>\r\n      <span>\r\n        Total: <span>{total()}</span>\r\n      </span>\r\n    </li>\r\n    <li>\r\n      <span>\r\n        Positive feedback: <span>{`${percentage()}%`}</span>\r\n      </span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ handleClickOnBtn, options }) => (\r\n  <div className=\"btn__Container\">\r\n    {options.map((option, index) => (\r\n      <button\r\n        key={index}\r\n        type=\"button\"\r\n        onClick={() => handleClickOnBtn(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  handleClickOnBtn: PropTypes.exact({\r\n    good: PropTypes.func.isRequired,\r\n    neutral: PropTypes.func.isRequired,\r\n    bad: PropTypes.func.isRequired,\r\n  }),\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Section.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className=\"Section\">\r\n    <h1 className=\"Title\">{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n  children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.defayltProps = {\r\n  message: 'Oops, something went wrong here :(',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackSection.css';\r\n\r\nimport Statistics from '../Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Section from '../Section';\r\nimport Notification from '../Notification';\r\n\r\nconst FeedbackSection = ({\r\n  handleClickOnBtn,\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n  good,\r\n  neutral,\r\n  bad,\r\n}) => (\r\n  <Section title=\"Please, leave your feedback here: \">\r\n    <FeedbackOptions\r\n      handleClickOnBtn={handleClickOnBtn}\r\n      options={['good', 'neutral', 'bad']}\r\n    />\r\n    <h2 className=\"Statistic__title\">Statistics</h2>\r\n    {countTotalFeedback() === 0 ? (\r\n      <Notification message=\"No feedback given\"></Notification>\r\n    ) : (\r\n      <Statistics\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        total={countTotalFeedback}\r\n        percentage={countPositiveFeedbackPercentage}\r\n      />\r\n    )}\r\n  </Section>\r\n);\r\n\r\nFeedbackSection.propTypes = {\r\n  handleClickOnBtn: PropTypes.exact({\r\n    good: PropTypes.func.isRequired,\r\n    neutral: PropTypes.func.isRequired,\r\n    bad: PropTypes.func.isRequired,\r\n  }),\r\n  countTotalFeedback: PropTypes.func.isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default FeedbackSection;\r\n","import React, { useState } from 'react';\nimport FeedbackSection from './components/FeedbackSection';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClickOnBtn = {\n    good: () => {\n      setGood(good => good + 1);\n    },\n\n    neutral: () => {\n      setNeutral(neutral => neutral + 1);\n    },\n\n    bad: () => {\n      setBad(bad => bad + 1);\n    },\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () =>\n    ((good / countTotalFeedback()) * 100).toFixed(2);\n\n  return (\n    <div>\n      <FeedbackSection\n        handleClickOnBtn={handleClickOnBtn}\n        countTotalFeedback={countTotalFeedback}\n        countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n        good={good}\n        neutral={neutral}\n        bad={bad}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}